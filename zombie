#!/bin/bash
# This script simulates "zombie" screenrc command
# Copyright (C) 2015 Jacob Alberty
#
# This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program; if not, write to
# the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

USAGE=0

if [ $# -lt 2 ]; then
    echo Usage: $0 [keys] [command [args]]
    USAGE=1
fi

if [ ${#1} -ne 2 ]; then
    echo [keys] must contain two characters.
    echo Pressing the first key after the process terminates will end the script.
    echo Pressing the second key after the process terminates will restart the process.
    USAGE=1
fi;

if [ "$USAGE" = 1 ]; then
    exit
fi;

stty -ctlecho
trap ' ' INT

KEYS="$1"
KEY_CLOSE=${KEYS:0:1} # 'r'
KEY_RESTART=${KEYS:1:2} # 'q'

shift # to remove the first element because it was used for KEYS

LOOP=1

while [ "$LOOP" = 1 ]; do
    "${@}"
    echo "=== Command terminated $(date) ==="
    char=''
    while [ "$char" != "${KEY_CLOSE}" -a "$char" != "${KEY_RESTART}" ]; do
        read -s -n 1 char
    done
    if [ "$char" = "${KEY_CLOSE}" ]; then
        LOOP=0 # break out of the loop
    fi
done
